#!/bin/bash
set -ex

rpmdir=/tmp/centos-release-rpms
target=/tmp/centos-chroot

# First, download release rpms

rm -rf $rpmdir
mkdir -p $rpmdir

(cd $rpmdir; yumdownloader centos-release)

rm -rf $target

mkdir -p $target

mkdir -p $target/var/lib

touch $target/var/lib/random-seed

rpm --root=$target --rebuilddb
rpm --root=$target/ -i --nodeps $rpmdir/centos-release-*.rpm

yum --installroot=$target groupinstall Core -y

chroot $target bash -c "echo root:xenroot | chpasswd"

pwconv --root=$target

# Set up consoles

cat >$target/etc/init/ttyS0 <<EOF
# ttyS0 - agetty
#
# This service maintains a agetty on ttyS0.

stop on runlevel [S016]
start on runlevel [23]

respawn
exec agetty -h -L -w /dev/ttyS0 115200 vt102
EOF
echo "ttyS0" >> $target/etc/securetty

cat >$target/etc/init/hvc0 <<EOF
# hvc0 - agetty
#
# This service maintains a agetty on ttyS0.

stop on runlevel [S016]
start on runlevel [23]

respawn
exec mingetty /dev/hvc0
EOF
echo "hvc0" >> $target/etc/securetty

# Set up fstab and grub

cat >$target/etc/fstab <<EOF
UUID=<UUID> / ext4 defaults 1 2
tmpfs /dev/shm tmpfs defaults  0 0
devpts /dev/pts devpts gid=5,mode=620 0 0
sysfs /sys sysfs defaults 0 0
proc /proc proc defaults 0 0
EOF

cat >$target/boot/grub/grub.conf <<EOF
# grub.conf generated by anaconda
#
# Note that you do not have to rerun grub after making changes to this file
# NOTICE:  You do not have a /boot partition.  This means that
#          all kernel and initrd paths are relative to /, eg.
#          root (hd0,0)
#          kernel /boot/vmlinuz-version ro root=UUID=<UUID>
#          initrd /boot/initrd-[generic-]version.img
#boot=/dev/sda
default=0
timeout=5
serial --unit=0 --speed=115200
terminal --timeout=5 serial console
title CentOS Template
    root (hd0,0)
    kernel /boot/vmlinuz-template ro root=UUID=<UUID> console=ttyS0,115200n8 console=hvc0
    initrd /boot/initramfs-template.img
EOF

cat >$target/etc/init.d/tl-finished-booting <<EOF
#!/bin/bash
#
# tl-finished-booting
#
# chkconfig: 2345 99 01
# description: Confirm fully booted

### BEGIN INIT INFO
# Provides:          tl-finished-booting
# Required-Start:    \$all
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Confirm fully booted
# Description:
### END INIT INFO

NAME=tl-finished-booting

case "\$1" in
  stop|restart)
        rm -f /dev/shm/tl-finished-booting
        ;;
  start|reload|force-reload)
        ;;
  *)
        echo "Usage: \$NAME {start|stop|restart|reload|force-reload}" >&2
        exit 3
esac

case "\$1" in
  start|reload|force-reload)
        if mount | egrep '^[^ 	][^ 	]* on /run/shm type tmpfs ' >/dev/null
        then
                if [ `readlink -f /dev/shm` != "/run/shm" ] ; then
                        echo >&2 '/dev/shm not a link to /run/shm ?'; exit 1
                fi
                touch /dev/shm/tl-finished-booting
        elif mount | egrep '^[^ 	][^ 	]* on /dev/shm type tmpfs ' >/dev/null
        then
                touch /dev/shm/tl-finished-booting
        else
                echo >&2 '/dev/shm is not a tmpfs ?'; exit 1
        fi
        ;;
esac
EOF

chroot $target chmod +x /etc/init.d/tl-finished-booting
chroot $target chkconfig --add tl-finished-booting

cd $target/boot/grub
ln -s grub.conf menu.lst
cd $target/etc
ln -s ../boot/grub/grub.conf

yum --installroot=$target install kernel -y
yum --installroot=$target install openssh-clients -y

# Openssh daemon will re-generate keys on first startup
rm -f $target/etc/ssh/*host*

# Get rid of unnecessary yum stuff
yum --installroot=$target clean all

# Create tarball
GZIP=-9v tar cpz -f /tmp/c6.tar.gz -C $target .